name: Dropwatch compilation workflow
on:
  push:
    branches: ["master", "dev"]
    tags:
      - v**
    paths-ignore:
      - "**.md"
      - "**.sh"
  pull_request:
    branches: ["master", "dev"]
    types:
      - opened
      - synchronize
      - ready_for_review
    paths-ignore:
      - "**.md"
      - "**.sh"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref}}
  cancel-in-progress: true

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  compile:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - uses: actions/checkout@v4
      - name: Download toolchains
        working-directory: ${{github.workspace}}
        run: |
          wget https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/10.2-2020.11/binrel/gcc-arm-10.2-2020.11-x86_64-aarch64-none-linux-gnu.tar.xz
          if [ ! -d ${{github.workspace}}/arm_gcc10.2_toolchain/ ]; then
            mkdir -p ${{github.workspace}}/arm_gcc10.2_toolchain/
          fi
          if [ -f ${{github.workspace}}/gcc-arm-10.2-2020.11-x86_64-aarch64-none-linux-gnu.tar.xz ]; then
            tar -Jxf ${{github.workspace}}/gcc-arm-10.2-2020.11-x86_64-aarch64-none-linux-gnu.tar.xz --strip-components 1 -C ${{github.workspace}}/arm_gcc10.2_toolchain
          fi
          ls -alh ${{github.workspace}}/arm_gcc10.2_toolchain/

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y binutils-dev libreadline-dev libnl-3-dev libnl-genl-3-dev libpcap-dev libnfnetlink-dev

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          cmake -B ${{github.workspace}}/buildarm -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=./cmake/arm_gcc10.2.cmake -DTOOLCHAIN_DIR=${{github.workspace}}/arm_gcc10.2_toolchain

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j

      - name: Cross build
        run: cmake --build ${{github.workspace}}/buildarm --config ${{env.BUILD_TYPE}} -j
